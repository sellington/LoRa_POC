; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; We're using one project for both the remote device and base station
; Each has its own environment
default_envs = remote_device, base_station, bidirectional_test

; Common settings for both environments
[env]
platform = espressif32
framework = arduino
monitor_speed = 115200
lib_deps = 
    jgromes/RadioLib @ ^6.2.0
    adafruit/Adafruit SSD1306 @ ^2.5.9
    adafruit/Adafruit GFX Library @ ^1.11.9
    bblanchon/ArduinoJson @ ^6.21.3

; Alternative Pin Test for LoRa BUSY/DIO1 signals
[env:alternate_pins_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
build_src_filter = +<alternate_pins_test.cpp>
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

; Basic I/O Test Environment (for hardware troubleshooting)
[env:io_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
build_src_filter = +<io_test.cpp>
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

; Tests for SPI and LoRa communication
[env:spi_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
build_src_filter = +<spi_test.cpp>
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:sx1262_pin_discovery]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
platform = espressif32
framework = arduino
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
    -D ARDUINO_HELTEC_WIFI_LORA_32_V3
build_src_filter = +<sx1262_pin_discovery.cpp>
lib_deps =
    ${env.lib_deps}
    jgromes/RadioLib @ ^6.2.0
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:confirmed_lora_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
platform = espressif32
framework = arduino
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
    -D ARDUINO_HELTEC_WIFI_LORA_32_V3
build_src_filter = +<confirmed_lora_test.cpp>
lib_deps =
    ${env.lib_deps}
    jgromes/RadioLib @ ^6.2.0
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:minimal_lora_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
platform = espressif32
framework = arduino
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
    -D ARDUINO_HELTEC_WIFI_LORA_32_V3
build_src_filter = +<minimal_lora_test.cpp>
lib_deps =
    ${env.lib_deps}
    jgromes/RadioLib @ ^6.2.0
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:fixed_lora_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board with fixed pin mapping
platform = espressif32
framework = arduino
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
    -D ARDUINO_HELTEC_WIFI_LORA_32_V3
build_src_filter = +<fixed_lora_test.cpp>
lib_deps =
    ${env.lib_deps}
    jgromes/RadioLib @ ^6.2.0
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:heltec_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board with Heltec-specific pins
platform = espressif32
framework = arduino
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
    -D ARDUINO_HELTEC_WIFI_LORA_32_V3
build_src_filter = +<heltec_test.cpp>
lib_deps =
    ${env.lib_deps}
    jgromes/RadioLib @ ^6.2.0
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

; Remote Device Environment
[env:remote_device]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEVICE_TYPE=1
    -D IS_REMOTE_DEVICE
    -D DEBUG_ENABLED
build_src_filter = 
    -<*>  
    +<../remote_device/src/*.cpp>
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_filters = esp32_exception_decoder

; Base Station Environment
[env:base_station]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEVICE_TYPE=2
    -D IS_BASE_STATION
    -D DEBUG_ENABLED
build_src_filter = 
    -<*>  
    +<../base_station/src/*.cpp>
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_filters = esp32_exception_decoder

; Bidirectional LoRa Test (simple ping-pong test)
[env:bidirectional_test]
board = esp32-s3-devkitc-1  ; ESP32-S3 board
platform = espressif32
framework = arduino
build_unflags = -std=gnu++11
build_flags = 
    -std=gnu++14
    -D DEBUG_ENABLED
    -D ARDUINO_HELTEC_WIFI_LORA_32_V3
build_src_filter = +<bidirectional_test.cpp>
lib_deps =
    ${env.lib_deps}
    jgromes/RadioLib @ ^6.2.0
upload_speed = 115200
upload_protocol = esptool
upload_flags = 
    --before=default_reset
    --after=hard_reset
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
